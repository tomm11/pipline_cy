{
	// Place your Ã¡rea de trabajo de Cypress snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Get Selector": {
		"prefix": "c_get&type",
		"body": [
			"cy.get('${1:selector}').should('be.visible').type('${2:type}')"
		],
		"description": "Obtiene un elemento utilizando el selector"
  },

 	 "Get xpath": {
	"prefix": "c_xpath",
	"body": [
		"cy.xpath('${1:selector}').should('be.visible')"
	],
	"description": "Obtiene un elemento por medio del xpath"
},

  	"Select fn": {
	"prefix": "c_select",
	"body": [
		"cy.get('${1:selector}').select('${2:type}', {force:true}).should('have.value','${3:valor}')"
	],
	"description": "Obtiene un elemento utilizando el selector"
},

	"check fn": {
	"prefix": "c_check",
	"body": [
		"cy.get('${1:selector}').check('').should('be.checked')"
	],
	"description": "Obtiene un elemento utilizando el selector"
},
	
  "Cypress_base": {		
		"prefix": "c_base",
		"body": [
		  "// Shows commands",
		  "///<reference types=\"Cypress\"/>",
		  "require('cypress-plugin-tab')",
		  "import 'cypress-fill-command'",
		  "require('@4tw/cypress-drag-drop')",
		  "",
		  "describe('${1:descripcion}', () => {",

			"beforeEach(()=>{",  
				"cy.visit('https://demo.seleniumeasy.com/input-form-demo.html')",
				"cy.title().should('eq','Selenium Easy - Input Form Demo with Validations')",
				"cy.wait(time)",
			"})",

			"Cypress.on('uncaught:exception',(err, runnable)=>{",
				"return false",
			"})",  

		  "  it('${2:name}', () => {",
		  "    let time = 2000;",
		  "    cy.visit('${3:url}');",
		  "    cy.title().should('eq','titulo');",
		  "    cy.wait(time);",		  
			
		  "  });",
		  "",
		  "",
		  "});"
		],
		"description": "description"
  },

  "it basico": {
	"prefix": "c_it",
	"body": [
		"  it('${1:name}', () => {",
		  "    let time = 2000;",
		  "    cy.visit('${2:url}');",
		   "   cy.wait(time);",		  
			
		  "  });",
			],
	"description": "IT para agregar "
},

  "Click": {
	"prefix": "c_click",
	"body": [
	  "cy.get('${1:selector}').should('be.visible').click({force:true})"
	],
	"description": "Obtenemos elemento y damos click"
},

"visit": {
	"prefix": "c_visit",
	"body": [
	  "cy.visit('${1:URL}')",
	  "cy.title().should('eq','${2:title}')"
	],
	"description": "Introducimos url"
}


}
